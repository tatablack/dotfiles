#!/usr/bin/env bash

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "\nThe bootstrap procedure did not complete.\n\n" >&2; exit $ret' EXIT
set -e

# Get information from the user
fancy_echo "Bootstrap sequence initiated"
read -rp 'Please, provide the email associated to your Apple ID: ' EMAIL_APPLEID
read -rp "And now, the email associated to your Bitwarden account [${EMAIL_APPLEID}]: " EMAIL_BITWARDEN
read -rp 'If you want to use a custom Bitwarden server, provide its url now (including the trailing slash): ' BITWARDEN_SERVER
read -rp "Lastly, your GitHub username: " GH_USERNAME

if [ -z "${EMAIL_BITWARDEN}" ]; then EMAIL_BITWARDEN="${EMAIL_APPLEID}"; fi
# Ask for the administrator password up front
fancy_echo "We'll need superuser privileges later on (e.g. to set the machine's hostname), so..."
sudo -v

# Keep-alive: update existing `sudo` timestamp until `./bootstrap` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Homebrew
if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  fancy_echo "Homebrew is already installed; moving on."
fi

fancy_echo "Installing Homebrew formulae..."
brew bundle --file=- <<EOF
brew "chezmoi"
brew "mas"
brew "pinentry-mac"
brew "rbw"
EOF

fancy_echo "Configuring Bitwarden client..."
rbw config set email "${EMAIL_BITWARDEN}"
rbw config set base_url "${BITWARDEN_SERVER}"
rbw config set pinentry "pinentry-mac"
rbw sync

# Delegate further actions to chezmoi scripts in my own dotfiles repository
fancy_echo "Delegating to chezmoi..."
chezmoi init --apply "${GH_USERNAME}"

# And we're done
fancy_echo "Bootstrap finished."
