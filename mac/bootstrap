#!/usr/bin/env bash

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

# Get information about the current brew installation, if any
command -v brew>/dev/null
is_brew_in_path=$?

[[ -f "/usr/local/bin/brew" ]]
is_brew_installed_on_intel=$?

[[ -f "/opt/homebrew/bin/brew" ]]
is_brew_installed_on_apple_silicon=$?

is_brew_installed=$is_brew_installed_on_intel || $is_brew_installed_on_apple_silicon

if $is_brew_installed_on_apple_silicon; then
  grep -q '/opt/homebrew/bin' /private/var/db/com.apple.xpc.launchd/config/user.plist
else
  grep -q '/usr/local/bin' /private/var/db/com.apple.xpc.launchd/config/user.plist
fi
is_brew_in_path_for_gui_apps=$?

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "\nThe bootstrap procedure did not complete.\n\n" >&2; exit $ret' EXIT
set -e

# Get information from the user
fancy_echo "Bootstrap sequence initiated"

if [[ ! -f "$HOME/Library/Application Support/rbw/config.json" ]]; then
  read -rp "Please, provide the email associated to your Bitwarden account: " EMAIL_BITWARDEN
  read -rp "If you want to use a custom Bitwarden server, provide its url now (including the trailing slash): " BITWARDEN_SERVER
fi

read -rp "Please, provide your GitHub username, to retrieve your dotfiles: " GH_USERNAME

# Ask for the administrator password up front
fancy_echo "We'll need superuser privileges later on (e.g. to set the machine's hostname), so..."
sudo -v

# Keep-alive: update existing `sudo` timestamp until the current script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Homebrew
if ! $is_brew_in_path && ! $is_brew_installed; then
  fancy_echo "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  fancy_echo "Homebrew is already installed; moving on."
fi

# Set the Homebrew path for GUI apps. See:
# - https://docs.brew.sh/FAQ#my-mac-apps-dont-find-homebrew-utilities
# - https://stackoverflow.com/a/70510488/224426
if ! $is_brew_in_path_for_gui_apps; then
  if $is_brew_installed_on_apple_silicon; then
    sudo launchctl config user path "/opt/homebrew/bin:${PATH}"
  else
    sudo launchctl config user path "/usr/local/bin:${PATH}"
  fi
fi

# Set the Homebrew path for Apple Silicon
if $is_brew_installed_on_apple_silicon; then
  if ! grep -q "/opt/homebrew/bin/brew" "${HOME}"/.bashrc; then
    export PATH=/opt/homebrew/bin:${PATH}
    echo "export PATH=/opt/homebrew/bin:${PATH}" >> "${HOME}"/.bashrc
  fi
fi

fancy_echo "Installing Homebrew formulae..."
brew bundle --file=- <<EOF
brew "chezmoi"
brew "mas"
brew "pinentry-mac"
brew "rbw"
EOF

if [[ ! -f "$HOME/Library/Application Support/rbw/config.json" ]]; then
  fancy_echo "Configuring Bitwarden client..."
  rbw config set email "${EMAIL_BITWARDEN}"

  if [ -z "${BITWARDEN_SERVER}" ]; then
    rbw config set base_url "${BITWARDEN_SERVER}"
  fi

  rbw config set pinentry "pinentry-mac"
fi

rbw sync
# Delegate further actions to chezmoi scripts in my own dotfiles repository
fancy_echo "Delegating to chezmoi..."
chezmoi init --apply "${GH_USERNAME}"

# And we're done
fancy_echo "Bootstrap finished."
